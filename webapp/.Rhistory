data <- data.frame(levels = c("<18","18-25","26-35","36-45","46-55","56-65",">65"))
data$levels <- as.character(data$levels)
data
data$levels
data <- data.frame(levels = c("<18","18-25","26-35","36-45","46-55","56-65",">65"), numbers = c (1, 2, 3, 4, 5, 6, 7))
data
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
return(courses)
getListOfCourses <- function() {
outputPath <- file.path(getwd(),"../data",institution)
courses <- list.dirs(path = outputPath, full.names = FALSE, recursive = FALSE)
courses <- courses[which(courses != "Courses Data")]
return(courses)
}
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
## use character columns of names to get sensible sort order
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
m1
## use character columns of names to get sensible sort order
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m2 <- merge(books, authors, by.x = "name", by.y = "surname"))
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
debugSource('~/mooc/mooc-dashboard/webapp/learner_analysis.R')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
View(learnersAgeData)
View(getWeekStep)
View(learnersAgeData)
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
Q
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
12
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
numeric(7)
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
shiny::runApp(system.file("shiny/", package="googleVis"))
G1a <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit')
## Regions examples
## The regions style fills entire regions (typically countries) with
## colors corresponding to the values that you assign
G1a <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit')
plot(G1a)
## Change projection
G1b <- gvisGeoChart(Exports, locationvar='Country', colorvar='Profit',
options=list(projection="kavrayskiy-vii"))
plot(G1b)
## Plot only Europe
G2 <- gvisGeoChart(Exports, "Country", "Profit",
options=list(region="150"))
plot(G2)
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shortenedCourse <- trimws(strsplit(courseRun, "-"))[[1]]
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
