# print(cArchEducators)
# print("=======")
# print(cContr)
# print(lContr)
# print(cContrEducators)
# print("=======")
# print(cExplr)
# print(lExplr)
# print(cExplrEducators)
# print("=======")
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Learning in the Network Age", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
cIntro <- count(commentsIntro$nature[!(commentsIntro$learner_id %in% educators$id)])
lIntro <- count(learnersIntro$type[!(learnersIntro$learner_id %in% educators$id)])
temp <- count(commentsIntro$nature[(commentsIntro$learner_id %in% educators$id)])
cIntroEducators <- sum(temp$freq)
#
# #Archaeology course
# dfArch <- getTable("Comments", "Archaeology of Portus: Exploring the Lost Harbour of Ancient Rome", "All")
# commentsArch <- getCommentsForClassification(dfArch)
# learnersArch <- getLearnerClassificationData(commentsArch)
#
# cArch <- count(commentsArch$nature[!(commentsArch$learner_id %in% educators$id)])
# lArch <- count(learnersArch$type[!(learnersArch$learner_id %in% educators$id)])
# temp <- count(commentsArch$nature[(commentsArch$learner_id %in% educators$id)])
# cArchEducators <- sum(temp$freq)
#
# #Contract Course
# dfContr <- getTable("Comments", "Contract Management: Building Relationships in business", "All")
# commentsContr <- getCommentsForClassification(dfContr)
# learnersContr <- getLearnerClassificationData(commentsContr)
#
# cContr <- count(commentsContr$nature[!(commentsContr$learner_id %in% educators$id)])
# lContr <- count(learnersContr$type[!(learnersContr$learner_id %in% educators$id)])
# temp <- count(commentsContr$nature[(commentsContr$learner_id %in% educators$id)])
# cContrEducators <- sum(temp$freq)
#
#
# m<-dbDriver("MySQL");
# con<-dbConnect(m,user='root',password=sqlPassword,host='localhost',dbname='moocs');
# query <- sprintf("SELECT * FROM Comments WHERE course = 'Exploring our Oceans' AND (course_run = '1' OR course_run = '2' OR course_run = '3')")
# dfExplr <- dbGetQuery(con,query)
# dbDisconnect(con)
#
# commentsExplr <- getCommentsForClassification(dfExplr)
# learnersExplr <- getLearnerClassificationData(commentsExplr)
#
# cExplr <- count(commentsExplr$nature[!(commentsExplr$learner_id %in% educators$id)])
# lExplr <- count(learnersExplr$type[!(learnersExplr$learner_id %in% educators$id)])
# temp <- count(commentsExplr$nature[(commentsExplr$learner_id %in% educators$id)])
# cExplrEducators <- sum(temp$freq)
#
#
#
print(cIntro)
print(lIntro)
print(cIntroEducators)
# print("=======")
# print(cArch)
# print(lArch)
# print(cArchEducators)
# print("=======")
# print(cContr)
# print(lContr)
# print(cContrEducators)
# print("=======")
# print(cExplr)
# print(lExplr)
# print(cExplrEducators)
# print("=======")
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Developing your research project", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
cIntro <- count(commentsIntro$nature[!(commentsIntro$learner_id %in% educators$id)])
lIntro <- count(learnersIntro$type[!(learnersIntro$learner_id %in% educators$id)])
temp <- count(commentsIntro$nature[(commentsIntro$learner_id %in% educators$id)])
cIntroEducators <- sum(temp$freq)
#
# #Archaeology course
# dfArch <- getTable("Comments", "Archaeology of Portus: Exploring the Lost Harbour of Ancient Rome", "All")
# commentsArch <- getCommentsForClassification(dfArch)
# learnersArch <- getLearnerClassificationData(commentsArch)
#
# cArch <- count(commentsArch$nature[!(commentsArch$learner_id %in% educators$id)])
# lArch <- count(learnersArch$type[!(learnersArch$learner_id %in% educators$id)])
# temp <- count(commentsArch$nature[(commentsArch$learner_id %in% educators$id)])
# cArchEducators <- sum(temp$freq)
#
# #Contract Course
# dfContr <- getTable("Comments", "Contract Management: Building Relationships in business", "All")
# commentsContr <- getCommentsForClassification(dfContr)
# learnersContr <- getLearnerClassificationData(commentsContr)
#
# cContr <- count(commentsContr$nature[!(commentsContr$learner_id %in% educators$id)])
# lContr <- count(learnersContr$type[!(learnersContr$learner_id %in% educators$id)])
# temp <- count(commentsContr$nature[(commentsContr$learner_id %in% educators$id)])
# cContrEducators <- sum(temp$freq)
#
#
# m<-dbDriver("MySQL");
# con<-dbConnect(m,user='root',password=sqlPassword,host='localhost',dbname='moocs');
# query <- sprintf("SELECT * FROM Comments WHERE course = 'Exploring our Oceans' AND (course_run = '1' OR course_run = '2' OR course_run = '3')")
# dfExplr <- dbGetQuery(con,query)
# dbDisconnect(con)
#
# commentsExplr <- getCommentsForClassification(dfExplr)
# learnersExplr <- getLearnerClassificationData(commentsExplr)
#
# cExplr <- count(commentsExplr$nature[!(commentsExplr$learner_id %in% educators$id)])
# lExplr <- count(learnersExplr$type[!(learnersExplr$learner_id %in% educators$id)])
# temp <- count(commentsExplr$nature[(commentsExplr$learner_id %in% educators$id)])
# cExplrEducators <- sum(temp$freq)
#
#
#
print(cIntro)
print(lIntro)
print(cIntroEducators)
# print("=======")
# print(cArch)
# print(lArch)
# print(cArchEducators)
# print("=======")
# print(cContr)
# print(lContr)
# print(cContrEducators)
# print("=======")
# print(cExplr)
# print(lExplr)
# print(cExplrEducators)
# print("=======")
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Developing your research project", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
print(learnersIntro)
#######################################
#### learners #start of comments learner
#calculate type of comments
comments_learner<-as.data.frame(table(comments$learner_id,comments$nature))
head(comments_learner)
colnames(comments_learner)<-c("learner_id","Type","Comments")
comments_learner<-reshape(comments_learner,timevar = "Type", idvar=c("learner_id"),direction="wide")
colnames(comments_learner)<-c("learner_id","first.reply","further.reply","initiating.post","initiator.reply","lone.post")
comments_learner$sumofcommentsmade<-apply(comments_learner[2:6],1,sum) #total comments contributed
####replies received: total, educators, other learners #df
repliesreceived<-comments[(comments$nature=="initiating post"|comments$nature=="first reply"),] #excluding replies received by initiator's reply and further reply to avoid double count but not yet minus replies made by themselves
totalrepliesreceived<-aggregate(replies ~ learner_id, data=repliesreceived ,sum)
#sum of likes for all comments
likes<-aggregate(likes ~ learner_id ,data=comments ,sum)
####merge all df for learners
Multimerge<-function (x,y){
df<-merge(x,y,by="learner_id",all.x=TRUE,all.y=TRUE)
return(df)
}
comments_learner <-Reduce(Multimerge,list(comments_learner,totalrepliesreceived,likes) )
comments_learner[is.na(comments_learner)]<-0
comments_learner$learner_id<-as.character(comments_learner$learner_id)
comments_learner$replies<-comments_learner$replies-(comments_learner$further.reply+comments_learner$initiator.reply) #minue their own reply to themselves, either in terms of initiator' reply or further reply
colnames(comments_learner)[8]<-"replies.received"
rm(Multimerge)
#######################################
#### learners #start of comments learner
#calculate type of comments
comments_learner<-as.data.frame(table(comments$learner_id,comments$nature))
head(comments_learner)
colnames(comments_learner)<-c("learner_id","Type","Comments")
comments_learner<-reshape(comments_learner,timevar = "Type", idvar=c("learner_id"),direction="wide")
colnames(comments_learner)<-c("learner_id","first.reply","further.reply","initiating.post","initiator.reply","lone.post")
comments_learner$sumofcommentsmade<-apply(comments_learner[2:6],1,sum) #total comments contributed
####replies received: total, educators, other learners #df
repliesreceived<-comments[(comments$nature=="initiating post"|comments$nature=="first reply"),] #excluding replies received by initiator's reply and further reply to avoid double count but not yet minus replies made by themselves
totalrepliesreceived<-aggregate(replies ~ learner_id, data=repliesreceived ,sum)
#sum of likes for all comments
likes<-aggregate(likes ~ learner_id ,data=comments ,sum)
####merge all df for learners
Multimerge<-function (x,y){
df<-merge(x,y,by="learner_id",all.x=TRUE,all.y=TRUE)
return(df)
}
comments_learner <-Reduce(Multimerge,list(comments_learner,totalrepliesreceived,likes) )
comments_learner[is.na(comments_learner)]<-0
comments_learner$learner_id<-as.character(comments_learner$learner_id)
comments_learner$replies<-comments_learner$replies-(comments_learner$further.reply+comments_learner$initiator.reply) #minue their own reply to themselves, either in terms of initiator' reply or further reply
colnames(comments_learner)[8]<-"replies.received"
rm(Multimerge)
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
print(learnersIntro)
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
print(learnersIntro)
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
cIntro <- count(commentsIntro$nature[!(commentsIntro$learner_id %in% educators$id)])
lIntro <- count(learnersIntro$type[!(learnersIntro$learner_id %in% educators$id)])
temp <- count(commentsIntro$nature[(commentsIntro$learner_id %in% educators$id)])
cIntroEducators <- sum(temp$freq)
#Archaeology course
dfArch <- getTable("Comments", "Archaeology of Portus: Exploring the Lost Harbour of Ancient Rome", "All")
commentsArch <- getCommentsForClassification(dfArch)
learnersArch <- getLearnerClassificationData(commentsArch)
cArch <- count(commentsArch$nature[!(commentsArch$learner_id %in% educators$id)])
lArch <- count(learnersArch$type[!(learnersArch$learner_id %in% educators$id)])
temp <- count(commentsArch$nature[(commentsArch$learner_id %in% educators$id)])
cArchEducators <- sum(temp$freq)
#Contract Course
dfContr <- getTable("Comments", "Contract Management: Building Relationships in business", "All")
commentsContr <- getCommentsForClassification(dfContr)
learnersContr <- getLearnerClassificationData(commentsContr)
cContr <- count(commentsContr$nature[!(commentsContr$learner_id %in% educators$id)])
lContr <- count(learnersContr$type[!(learnersContr$learner_id %in% educators$id)])
temp <- count(commentsContr$nature[(commentsContr$learner_id %in% educators$id)])
cContrEducators <- sum(temp$freq)
m<-dbDriver("MySQL");
con<-dbConnect(m,user='root',password=sqlPassword,host='localhost',dbname='moocs');
query <- sprintf("SELECT * FROM Comments WHERE course = 'Exploring our Oceans' AND (course_run = '1' OR course_run = '2' OR course_run = '3')")
dfExplr <- dbGetQuery(con,query)
dbDisconnect(con)
commentsExplr <- getCommentsForClassification(dfExplr)
learnersExplr <- getLearnerClassificationData(commentsExplr)
cExplr <- count(commentsExplr$nature[!(commentsExplr$learner_id %in% educators$id)])
lExplr <- count(learnersExplr$type[!(learnersExplr$learner_id %in% educators$id)])
temp <- count(commentsExplr$nature[(commentsExplr$learner_id %in% educators$id)])
cExplrEducators <- sum(temp$freq)
print(cIntro)
print(lIntro)
print(cIntroEducators)
print("=======")
print(cArch)
print(lArch)
print(cArchEducators)
print("=======")
print(cContr)
print(lContr)
print(cContrEducators)
print("=======")
print(cExplr)
print(lExplr)
print(cExplrEducators)
print("=======")
runApp()
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
print(learnersIntro)
# cIntro <- count(commentsIntro$nature[!(commentsIntro$learner_id %in% educators$id)])
# lIntro <- count(learnersIntro$type[!(learnersIntro$learner_id %in% educators$id)])
# temp <- count(commentsIntro$nature[(commentsIntro$learner_id %in% educators$id)])
# cIntroEducators <- sum(temp$freq)
#
# #Archaeology course
# dfArch <- getTable("Comments", "Archaeology of Portus: Exploring the Lost Harbour of Ancient Rome", "All")
# commentsArch <- getCommentsForClassification(dfArch)
# learnersArch <- getLearnerClassificationData(commentsArch)
#
# cArch <- count(commentsArch$nature[!(commentsArch$learner_id %in% educators$id)])
# lArch <- count(learnersArch$type[!(learnersArch$learner_id %in% educators$id)])
# temp <- count(commentsArch$nature[(commentsArch$learner_id %in% educators$id)])
# cArchEducators <- sum(temp$freq)
#
# #Contract Course
# dfContr <- getTable("Comments", "Contract Management: Building Relationships in business", "All")
# commentsContr <- getCommentsForClassification(dfContr)
# learnersContr <- getLearnerClassificationData(commentsContr)
#
# cContr <- count(commentsContr$nature[!(commentsContr$learner_id %in% educators$id)])
# lContr <- count(learnersContr$type[!(learnersContr$learner_id %in% educators$id)])
# temp <- count(commentsContr$nature[(commentsContr$learner_id %in% educators$id)])
# cContrEducators <- sum(temp$freq)
#
#
# m<-dbDriver("MySQL");
# con<-dbConnect(m,user='root',password=sqlPassword,host='localhost',dbname='moocs');
# query <- sprintf("SELECT * FROM Comments WHERE course = 'Exploring our Oceans' AND (course_run = '1' OR course_run = '2' OR course_run = '3')")
# dfExplr <- dbGetQuery(con,query)
# dbDisconnect(con)
#
# commentsExplr <- getCommentsForClassification(dfExplr)
# learnersExplr <- getLearnerClassificationData(commentsExplr)
#
# cExplr <- count(commentsExplr$nature[!(commentsExplr$learner_id %in% educators$id)])
# lExplr <- count(learnersExplr$type[!(learnersExplr$learner_id %in% educators$id)])
# temp <- count(commentsExplr$nature[(commentsExplr$learner_id %in% educators$id)])
# cExplrEducators <- sum(temp$freq)
print(cIntro)
print(lIntro)
print(cIntroEducators)
print("=======")
# print(cArch)
# print(lArch)
# print(cArchEducators)
# print("=======")
# print(cContr)
# print(lContr)
# print(cContrEducators)
# print("=======")
# print(cExplr)
# print(lExplr)
# print(cExplrEducators)
# print("=======")
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
print(learnersIntro)
cIntro <- count(commentsIntro$nature[!(commentsIntro$learner_id %in% educators$id)])
lIntro <- count(learnersIntro$type[!(learnersIntro$learner_id %in% educators$id)])
temp <- count(commentsIntro$nature[(commentsIntro$learner_id %in% educators$id)])
cIntroEducators <- sum(temp$freq)
#
# #Archaeology course
# dfArch <- getTable("Comments", "Archaeology of Portus: Exploring the Lost Harbour of Ancient Rome", "All")
# commentsArch <- getCommentsForClassification(dfArch)
# learnersArch <- getLearnerClassificationData(commentsArch)
#
# cArch <- count(commentsArch$nature[!(commentsArch$learner_id %in% educators$id)])
# lArch <- count(learnersArch$type[!(learnersArch$learner_id %in% educators$id)])
# temp <- count(commentsArch$nature[(commentsArch$learner_id %in% educators$id)])
# cArchEducators <- sum(temp$freq)
#
# #Contract Course
# dfContr <- getTable("Comments", "Contract Management: Building Relationships in business", "All")
# commentsContr <- getCommentsForClassification(dfContr)
# learnersContr <- getLearnerClassificationData(commentsContr)
#
# cContr <- count(commentsContr$nature[!(commentsContr$learner_id %in% educators$id)])
# lContr <- count(learnersContr$type[!(learnersContr$learner_id %in% educators$id)])
# temp <- count(commentsContr$nature[(commentsContr$learner_id %in% educators$id)])
# cContrEducators <- sum(temp$freq)
#
#
# m<-dbDriver("MySQL");
# con<-dbConnect(m,user='root',password=sqlPassword,host='localhost',dbname='moocs');
# query <- sprintf("SELECT * FROM Comments WHERE course = 'Exploring our Oceans' AND (course_run = '1' OR course_run = '2' OR course_run = '3')")
# dfExplr <- dbGetQuery(con,query)
# dbDisconnect(con)
#
# commentsExplr <- getCommentsForClassification(dfExplr)
# learnersExplr <- getLearnerClassificationData(commentsExplr)
#
# cExplr <- count(commentsExplr$nature[!(commentsExplr$learner_id %in% educators$id)])
# lExplr <- count(learnersExplr$type[!(learnersExplr$learner_id %in% educators$id)])
# temp <- count(commentsExplr$nature[(commentsExplr$learner_id %in% educators$id)])
# cExplrEducators <- sum(temp$freq)
print(cIntro)
print(lIntro)
print(cIntroEducators)
print("=======")
# print(cArch)
# print(lArch)
# print(cArchEducators)
# print("=======")
# print(cContr)
# print(lContr)
# print(cContrEducators)
# print("=======")
# print(cExplr)
# print(lExplr)
# print(cExplrEducators)
# print("=======")
require(plyr)
require(RMySQL)
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_filters.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/learner_analysis.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/courses.R")
source("/home/erpatrascu/mooc/mooc-dashboard/webapp/data_retrieval.R")
educators <-getAllTableData("TeamMembers")
#Intro course
dfIntro <- getTable("Comments", "Introduction to Linked Data and the Semantic Web", "All")
commentsIntro <- getCommentsForClassification(dfIntro)
learnersIntro <- getLearnerClassificationData(commentsIntro)
print(learnersIntro)
cIntro <- count(commentsIntro$nature[!(commentsIntro$learner_id %in% educators$id)])
lIntro <- count(learnersIntro$type[!(learnersIntro$learner_id %in% educators$id)])
temp <- count(commentsIntro$nature[(commentsIntro$learner_id %in% educators$id)])
cIntroEducators <- sum(temp$freq)
#
# #Archaeology course
# dfArch <- getTable("Comments", "Archaeology of Portus: Exploring the Lost Harbour of Ancient Rome", "All")
# commentsArch <- getCommentsForClassification(dfArch)
# learnersArch <- getLearnerClassificationData(commentsArch)
#
# cArch <- count(commentsArch$nature[!(commentsArch$learner_id %in% educators$id)])
# lArch <- count(learnersArch$type[!(learnersArch$learner_id %in% educators$id)])
# temp <- count(commentsArch$nature[(commentsArch$learner_id %in% educators$id)])
# cArchEducators <- sum(temp$freq)
#
# #Contract Course
# dfContr <- getTable("Comments", "Contract Management: Building Relationships in business", "All")
# commentsContr <- getCommentsForClassification(dfContr)
# learnersContr <- getLearnerClassificationData(commentsContr)
#
# cContr <- count(commentsContr$nature[!(commentsContr$learner_id %in% educators$id)])
# lContr <- count(learnersContr$type[!(learnersContr$learner_id %in% educators$id)])
# temp <- count(commentsContr$nature[(commentsContr$learner_id %in% educators$id)])
# cContrEducators <- sum(temp$freq)
#
#
# m<-dbDriver("MySQL");
# con<-dbConnect(m,user='root',password=sqlPassword,host='localhost',dbname='moocs');
# query <- sprintf("SELECT * FROM Comments WHERE course = 'Exploring our Oceans' AND (course_run = '1' OR course_run = '2' OR course_run = '3')")
# dfExplr <- dbGetQuery(con,query)
# dbDisconnect(con)
#
# commentsExplr <- getCommentsForClassification(dfExplr)
# learnersExplr <- getLearnerClassificationData(commentsExplr)
#
# cExplr <- count(commentsExplr$nature[!(commentsExplr$learner_id %in% educators$id)])
# lExplr <- count(learnersExplr$type[!(learnersExplr$learner_id %in% educators$id)])
# temp <- count(commentsExplr$nature[(commentsExplr$learner_id %in% educators$id)])
# cExplrEducators <- sum(temp$freq)
print(cIntro)
print(lIntro)
print(cIntroEducators)
print("=======")
# print(cArch)
# print(lArch)
# print(cArchEducators)
# print("=======")
# print(cContr)
# print(lContr)
# print(cContrEducators)
# print("=======")
# print(cExplr)
# print(lExplr)
# print(cExplrEducators)
# print("=======")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
