nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
m1
## use character columns of names to get sensible sort order
authors <- data.frame(
surname = I(c("Tukey", "Venables", "Tierney", "Ripley", "McNeil")),
nationality = c("US", "Australia", "US", "UK", "Australia"),
deceased = c("yes", rep("no", 4)))
books <- data.frame(
name = I(c("Tukey", "Venables", "Tierney",
"Ripley", "Ripley", "McNeil", "R Core")),
title = c("Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis",
"An Introduction to R"),
other.author = c(NA, "Ripley", NA, NA, NA, NA,
"Venables & Smith"))
(m1 <- merge(authors, books, by.x = "surname", by.y = "name"))
(m2 <- merge(books, authors, by.x = "name", by.y = "surname"))
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
debugSource('~/mooc/mooc-dashboard/webapp/learner_analysis.R')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
View(learnersAgeData)
View(getWeekStep)
View(learnersAgeData)
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
Q
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
12
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
numeric(7)
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
cat("a", "b")
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
commentsDf <- commentsDf[commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"]
commentsDf
commentsDf
commentsDf
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
commentsDf <- commentsDf[commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"]
commentsDf
commentsDf <- getAllTableData("Comments")
source('~/mooc/mooc-dashboard/webapp/survey.R')
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
commentsDf <- commentsDf[commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"]
commentsDf
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
commentsDf <- commentsDf[commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"]
commentsDf
source("server.R")
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
shiny::runApp('mooc/mooc-dashboard/webapp')
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
commentsDf <- commentsDf[commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"]
commentsDf
commentsDf <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society")
commentsDf
commentsDf <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society" & commentsDf$step == "1.2" & commentsDf$text!="")
commentsDf
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments
comments$preCourseSurvey <- logic()
comments$postCourseSurvey <- logic()
comments
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(FALSE)
comments$postCourseSurvey <- logical(FALSE)
for(i in 1:(nrow(comments))){
comments$preCourseSurvey[which(comments$author_id) == precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[which(comments$author_id) == postcourseDf$partner_export_id]<-TRUE
}
comments
head(comments)
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(FALSE)
comments$postCourseSurvey <- logical(FALSE)
for(i in 1:(nrow(comments))){
comments$preCourseSurvey[which(comments$author_id) == precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[which(comments$author_id) == postcourseDf$partner_export_id]<-TRUE
}
head(comments)
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical()
comments$postCourseSurvey <- logical()
for(i in 1:(nrow(comments))){
comments[which(comments$author_id == precourseDf$partner_export_id)]$preCourseSurvey<-TRUE
comments[which(comments$author_id == postcourseDf$partner_export_id)]$postCourseSurvey<-TRUE
}
head(comments)
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
for(i in 1:(nrow(comments))){
comments[which(comments$author_id == precourseDf$partner_export_id)]$preCourseSurvey<-TRUE
comments[which(comments$author_id == postcourseDf$partner_export_id)]$postCourseSurvey<-TRUE
}
head(comments)
head(comments[which(comments$preCourseSurvey == TRUE)])
head(comments[which(comments$postCourseSurvey == TRUE)])
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
for(i in 1:(nrow(comments))){
comments[which(comments$author_id == precourseDf$partner_export_id)]$preCourseSurvey<-TRUE
comments[which(comments$author_id == postcourseDf$partner_export_id)]$postCourseSurvey<-TRUE
}
head(comments[which(comments$postCourseSurvey == TRUE)])
head(comments[which(comments$postCourseSurvey == "TRUE")])
head(comments[whichcomments$author_id == postcourseDf$partner_export_id)])
head(comments[which(comments$author_id == postcourseDf$partner_export_id)])
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments[which(comments$author_id == precourseDf$partner_export_id)]$preCourseSurvey<-TRUE
comments[which(comments$author_id == postcourseDf$partner_export_id)]$postCourseSurvey<-TRUE
#
head(comments[which(comments$author_id == postcourseDf$partner_export_id)])
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id == precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id == postcourseDf$partner_export_id]<-TRUE
#
head(comments[which(comments$author_id == postcourseDf$partner_export_id)])
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
head(comments[which(comments$author_id == postcourseDf$partner_export_id)])
head(comments)
head(comments[comments$preCourseSurvey]==TRUE)
head(comments[comments$preCourseSurvey==TRUE])
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society"
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
head(comments[comments$preCourseSurvey==TRUE])
head(comments[which(comments$preCourseSurvey==TRUE)])
head(comments[comments$preCourseSurvey==TRUE),)
head(comments[comments$preCourseSurvey==TRUE],)
head(comments[comments$preCourseSurvey==TRUE,])
head(comments[comments$preCourseSurvey==TRUE])
head(comments[comments$preCourseSurvey==TRUE & comments$postCourseSurvey==TRUE])
head(comments[comments$preCourseSurvey==TRUE & comments$postCourseSurvey==TRUE, ])
head(comments[comments$postCourseSurvey==TRUE, ])
precourseDf <- read.csv("/home/erpatrascu/161228-pre-course-digital-accessibility-1.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/161228-post-course-digital-accessibility-1.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society" & commentsDf$run == 1
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
head(comments[comments$postCourseSurvey==TRUE, ])
data <- merge(precourseDf, postcourseDf, by.x = "RespondentID", by.y = "RespondentID")
data
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/pre-course responses.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/post-course responses.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society" & commentsDf$run == 2
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
data <- merge(precourseDf, postcourseDf, by.x = "RespondentID", by.y = "RespondentID")
data
head(comments[comments$postCourseSurvey==TRUE, ])
head(comments[comments$preCourseSurvey==TRUE, ])
source("learner_filters.R")
source("courses.R")
source("data_retrieval.R")
source("server.R")
precourseDf <- read.csv("/home/erpatrascu/pre-course responses.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/post-course responses.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society" & commentsDf$run == 2
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
#data <- merge(precourseDf, postcourseDf, by.x = "RespondentID", by.y = "RespondentID")
#data
head(comments[comments$preCourseSurvey==TRUE, ])
precourseDf <- read.csv("/home/erpatrascu/pre-course responses.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/post-course responses.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society" & commentsDf$run == 2
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
head(comments[comments$preCourseSurvey==TRUE, ])
precourseDf <- read.csv("/home/erpatrascu/pre-course responses.csv", header = TRUE)
postcourseDf <- read.csv("/home/erpatrascu/post-course responses.csv", header = TRUE)
commentsDf <- getAllTableData("Comments")
comments <- subset(commentsDf, commentsDf$course == "Digital Accessibility: Enabling Participation in the Information Society" & commentsDf$run == 2
& commentsDf$step == "1.2" & commentsDf$text!="")[, c("author_id", "text")]
comments$preCourseSurvey <- logical(nrow(comments))
comments$postCourseSurvey <- logical(nrow(comments))
#for(i in 1:(nrow(comments))){
comments$preCourseSurvey[comments$author_id %in% precourseDf$partner_export_id]<-TRUE
comments$postCourseSurvey[comments$author_id %in% postcourseDf$partner_export_id]<-TRUE
#
#data <- merge(precourseDf, postcourseDf, by.x = "RespondentID", by.y = "RespondentID")
#data
head(comments[comments$preCourseSurvey==TRUE, ])
source("learner_filters.R")
source("learner_filters.R")
source('~/mooc/mooc-dashboard/webapp/survey.R')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
comments <- comments[which(comments$step == "1.2"), ][ ,c("author_id", "text")]
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
require(rCharts)
require(rCharts)
h1 <-rCharts::Highcharts$new()
h1$title(text = "CORRELATION PLOT", align = "center")
h1$xAxis(title = list(text = input$variable1))
h1$yAxis(title = list(text = input$variable2))
plot_data_orig = list(
list(x = 0, y = 0.2),
list(x = 1, y = 0.9),
list(x = 2, y = 2.1)
)
plot_data_fitted = list(
list(x = 0, y = 0),
list(x = 1, y = 1),
list(x = 2, y = 2)
)
h1$series(name = "Values",
type = "scatter",
data = plot_data_orig)
h1$series(name = "regression",
type = "line",
data = plot_data_fitted)
h1
runApp('mooc/mooc-dashboard/webapp')
shiny::runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
runApp('mooc/mooc-dashboard/webapp')
